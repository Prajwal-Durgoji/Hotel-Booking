{"ast":null,"code":"import React, { Component, useContext } from 'react';\nimport './LoginUser.css';\nimport { useNavigate } from 'react-router-dom';\nimport { UsernameContext } from '../helpers/UsernameContext';\n\n// class LoginUser extends Component {\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       username: '',\n//       password: ''\n//     }\n//   }\n\n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   }\n\n//   handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const response = await fetch('http://localhost:8080/api/hotels/login/seller', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         sellerEmail: this.state.username,\n//         sellerPassword: this.state.password,\n//       }),\n//     });\n\n//     if (response.ok) {\n//       const data = await response.json();\n//       console.log('Login response:', data);\n//       this.props.setUsername(this.state.username);\n//       // Ensure navigate is called with the correct parameters to pass state\n//       this.props.navigate('/seller', { state: { sellerId: data.sellerId, sellerEmail: data.sellerEmail } });\n//     } else {\n//       alert('Invalid username or password');\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <UsernameContext.Consumer>\n//         {({ setUsername }) => (\n//           <div className=\"login-container\">\n//             <h2>Login</h2>\n//             <form className=\"login-form\" onSubmit={(event) => {\n//               event.preventDefault();\n//               setUsername(this.state.username);\n//               this.props.navigate('/seller');\n//             }}>\n//               <div className=\"form-group\">\n//                 <label>Username:</label>\n//                 <input type=\"text\" name=\"username\" onChange={this.handleInputChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password:</label>\n//                 <input type=\"password\" name=\"password\" onChange={this.handleInputChange} />\n//               </div>\n//               <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//         )}\n//       </UsernameContext.Consumer>\n\n//     )\n//   }\n// }\n\n// const LoginUserWithNavigate = () => {\n//   const navigate = useNavigate();\n//   const { setUsername } = useContext(UsernameContext);\n//   return <LoginUser navigate={navigate} setUsername={setUsername} />;\n// }\n\n// export default LoginUserWithNavigate;","map":{"version":3,"names":["React","Component","useContext","useNavigate","UsernameContext"],"sources":["C:/Users/User/OneDrive/Desktop/hotelbooking/src/pages/LoginUser.js"],"sourcesContent":["import React, { Component, useContext } from 'react';\r\nimport './LoginUser.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UsernameContext } from '../helpers/UsernameContext';\r\n\r\n\r\n// class LoginUser extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n\r\n//     this.state = {\r\n//       username: '',\r\n//       password: ''\r\n//     }\r\n//   }\r\n\r\n//   handleInputChange = (event) => {\r\n//     this.setState({\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   }\r\n\r\n\r\n//   handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const response = await fetch('http://localhost:8080/api/hotels/login/seller', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         sellerEmail: this.state.username,\r\n//         sellerPassword: this.state.password,\r\n//       }),\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       const data = await response.json();\r\n//       console.log('Login response:', data);\r\n//       this.props.setUsername(this.state.username);\r\n//       // Ensure navigate is called with the correct parameters to pass state\r\n//       this.props.navigate('/seller', { state: { sellerId: data.sellerId, sellerEmail: data.sellerEmail } });\r\n//     } else {\r\n//       alert('Invalid username or password');\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <UsernameContext.Consumer>\r\n//         {({ setUsername }) => (\r\n//           <div className=\"login-container\">\r\n//             <h2>Login</h2>\r\n//             <form className=\"login-form\" onSubmit={(event) => {\r\n//               event.preventDefault();\r\n//               setUsername(this.state.username);\r\n//               this.props.navigate('/seller');\r\n//             }}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Username:</label>\r\n//                 <input type=\"text\" name=\"username\" onChange={this.handleInputChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password:</label>\r\n//                 <input type=\"password\" name=\"password\" onChange={this.handleInputChange} />\r\n//               </div>\r\n//               <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n//       </UsernameContext.Consumer>\r\n\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const LoginUserWithNavigate = () => {\r\n//   const navigate = useNavigate();\r\n//   const { setUsername } = useContext(UsernameContext);\r\n//   return <LoginUser navigate={navigate} setUsername={setUsername} />;\r\n// }\r\n\r\n// export default LoginUserWithNavigate;"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AACpD,OAAO,iBAAiB;AACxB,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,eAAe,QAAQ,4BAA4B;;AAG5D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
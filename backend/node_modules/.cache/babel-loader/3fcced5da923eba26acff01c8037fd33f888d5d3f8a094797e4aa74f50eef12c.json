{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\OneDrive\\\\Desktop\\\\hotelbooking\\\\src\\\\pages\\\\LoginUser.js\",\n  _s = $RefreshSig$();\nimport React, { Component, useContext } from 'react';\nimport './LoginUser.css';\nimport { useNavigate } from 'react-router-dom';\nimport { UsernameContext } from '../helpers/UsernameContext';\n\n// class LoginUser extends Component {\n//   constructor(props) {\n//     super(props)\n\n//     this.state = {\n//       username: '',\n//       password: ''\n//     }\n//   }\n\n//   handleInputChange = (event) => {\n//     this.setState({\n//       [event.target.name]: event.target.value\n//     });\n//   }\n\n//   handleSubmit = async (event) => {\n//     event.preventDefault();\n\n//     const response = await fetch('http://localhost:8080/api/hotels/login/seller', {\n//       method: 'POST',\n//       headers: {\n//         'Content-Type': 'application/json',\n//       },\n//       body: JSON.stringify({\n//         sellerEmail: this.state.username,\n//         sellerPassword: this.state.password,\n//       }),\n//     });\n\n//     if (response.ok) {\n//       const data = await response.json();\n//       console.log('Login response:', data);\n//       this.props.setUsername(this.state.username);\n//       // Ensure navigate is called with the correct parameters to pass state\n//       this.props.navigate('/seller', { state: { sellerId: data.sellerId, sellerEmail: data.sellerEmail } });\n//     } else {\n//       alert('Invalid username or password');\n//     }\n//   }\n\n//   render() {\n//     return (\n//       <UsernameContext.Consumer>\n//         {({ setUsername }) => (\n//           <div className=\"login-container\">\n//             <h2>Login</h2>\n//             <form className=\"login-form\" onSubmit={(event) => {\n//               event.preventDefault();\n//               setUsername(this.state.username);\n//               this.props.navigate('/seller');\n//             }}>\n//               <div className=\"form-group\">\n//                 <label>Username:</label>\n//                 <input type=\"text\" name=\"username\" onChange={this.handleInputChange} />\n//               </div>\n//               <div className=\"form-group\">\n//                 <label>Password:</label>\n//                 <input type=\"password\" name=\"password\" onChange={this.handleInputChange} />\n//               </div>\n//               <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\n//             </form>\n//           </div>\n//         )}\n//       </UsernameContext.Consumer>\n\n//     )\n//   }\n// }\n\n// const LoginUserWithNavigate = () => {\n//   const navigate = useNavigate();\n//   const { setUsername } = useContext(UsernameContext);\n//   return <LoginUser navigate={navigate} setUsername={setUsername} />;\n// }\n\n// export default LoginUserWithNavigate;\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass LoginUser extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: '',\n      password: ''\n    };\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleInputChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n  async handleSubmit(event) {\n    event.preventDefault();\n    const response = await fetch('http://localhost:8080/api/hotels/login/seller', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        sellerEmail: this.state.username,\n        sellerPassword: this.state.password\n      })\n    });\n    if (response.ok) {\n      const data = await response.json();\n      console.log('Login response:', data);\n      // Store the token in localStorage\n      localStorage.setItem('authToken', data.token);\n      this.props.setUsername(this.state.username);\n      this.props.navigate('/seller', {\n        state: {\n          sellerId: data.sellerId,\n          sellerEmail: data.sellerEmail\n        }\n      });\n    } else {\n      alert('Invalid username or password');\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(UsernameContext.Consumer, {\n      children: ({\n        setUsername\n      }) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: \"login-form\",\n          onSubmit: this.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Username:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"username\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              name: \"password\",\n              onChange: this.handleInputChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"submit-button\",\n            type: \"submit\",\n            value: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this);\n  }\n}\nconst LoginUserWithNavigate = () => {\n  _s();\n  const navigate = useNavigate();\n  const {\n    setUsername\n  } = useContext(UsernameContext);\n  return /*#__PURE__*/_jsxDEV(LoginUser, {\n    navigate: navigate,\n    setUsername: setUsername\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 10\n  }, this);\n};\n_s(LoginUserWithNavigate, \"FNL8KDYH9a3IjOejGzVSyB5PfBw=\", false, function () {\n  return [useNavigate];\n});\n_c = LoginUserWithNavigate;\nexport default LoginUserWithNavigate;\nvar _c;\n$RefreshReg$(_c, \"LoginUserWithNavigate\");","map":{"version":3,"names":["React","Component","useContext","useNavigate","UsernameContext","jsxDEV","_jsxDEV","LoginUser","constructor","props","state","username","password","handleInputChange","bind","handleSubmit","event","setState","target","name","value","preventDefault","response","fetch","method","headers","body","JSON","stringify","sellerEmail","sellerPassword","ok","data","json","console","log","localStorage","setItem","token","setUsername","navigate","sellerId","alert","render","Consumer","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","onChange","LoginUserWithNavigate","_s","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/hotelbooking/src/pages/LoginUser.js"],"sourcesContent":["import React, { Component, useContext } from 'react';\r\nimport './LoginUser.css'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { UsernameContext } from '../helpers/UsernameContext';\r\n\r\n// class LoginUser extends Component {\r\n//   constructor(props) {\r\n//     super(props)\r\n\r\n//     this.state = {\r\n//       username: '',\r\n//       password: ''\r\n//     }\r\n//   }\r\n\r\n//   handleInputChange = (event) => {\r\n//     this.setState({\r\n//       [event.target.name]: event.target.value\r\n//     });\r\n//   }\r\n\r\n\r\n//   handleSubmit = async (event) => {\r\n//     event.preventDefault();\r\n\r\n//     const response = await fetch('http://localhost:8080/api/hotels/login/seller', {\r\n//       method: 'POST',\r\n//       headers: {\r\n//         'Content-Type': 'application/json',\r\n//       },\r\n//       body: JSON.stringify({\r\n//         sellerEmail: this.state.username,\r\n//         sellerPassword: this.state.password,\r\n//       }),\r\n//     });\r\n\r\n//     if (response.ok) {\r\n//       const data = await response.json();\r\n//       console.log('Login response:', data);\r\n//       this.props.setUsername(this.state.username);\r\n//       // Ensure navigate is called with the correct parameters to pass state\r\n//       this.props.navigate('/seller', { state: { sellerId: data.sellerId, sellerEmail: data.sellerEmail } });\r\n//     } else {\r\n//       alert('Invalid username or password');\r\n//     }\r\n//   }\r\n\r\n//   render() {\r\n//     return (\r\n//       <UsernameContext.Consumer>\r\n//         {({ setUsername }) => (\r\n//           <div className=\"login-container\">\r\n//             <h2>Login</h2>\r\n//             <form className=\"login-form\" onSubmit={(event) => {\r\n//               event.preventDefault();\r\n//               setUsername(this.state.username);\r\n//               this.props.navigate('/seller');\r\n//             }}>\r\n//               <div className=\"form-group\">\r\n//                 <label>Username:</label>\r\n//                 <input type=\"text\" name=\"username\" onChange={this.handleInputChange} />\r\n//               </div>\r\n//               <div className=\"form-group\">\r\n//                 <label>Password:</label>\r\n//                 <input type=\"password\" name=\"password\" onChange={this.handleInputChange} />\r\n//               </div>\r\n//               <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\r\n//             </form>\r\n//           </div>\r\n//         )}\r\n//       </UsernameContext.Consumer>\r\n\r\n//     )\r\n//   }\r\n// }\r\n\r\n// const LoginUserWithNavigate = () => {\r\n//   const navigate = useNavigate();\r\n//   const { setUsername } = useContext(UsernameContext);\r\n//   return <LoginUser navigate={navigate} setUsername={setUsername} />;\r\n// }\r\n\r\n// export default LoginUserWithNavigate;\r\n\r\nclass LoginUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: '',\r\n      password: ''\r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  }\r\n\r\n  async handleSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const response = await fetch('http://localhost:8080/api/hotels/login/seller', {\r\n      method: 'POST',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        sellerEmail: this.state.username,\r\n        sellerPassword: this.state.password,\r\n      }),\r\n    });\r\n\r\n    if (response.ok) {\r\n      const data = await response.json();\r\n      console.log('Login response:', data);\r\n      // Store the token in localStorage\r\n      localStorage.setItem('authToken', data.token);\r\n      this.props.setUsername(this.state.username);\r\n      this.props.navigate('/seller', { state: { sellerId: data.sellerId, sellerEmail: data.sellerEmail } });\r\n    } else {\r\n      alert('Invalid username or password');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <UsernameContext.Consumer>\r\n        {({ setUsername }) => (\r\n          <div className=\"login-container\">\r\n            <h2>Login</h2>\r\n            <form className=\"login-form\" onSubmit={this.handleSubmit}>\r\n              <div className=\"form-group\">\r\n                <label>Username:</label>\r\n                <input type=\"text\" name=\"username\" onChange={this.handleInputChange} />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <label>Password:</label>\r\n                <input type=\"password\" name=\"password\" onChange={this.handleInputChange} />\r\n              </div>\r\n              <input className=\"submit-button\" type=\"submit\" value=\"Submit\" />\r\n            </form>\r\n          </div>\r\n        )}\r\n      </UsernameContext.Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nconst LoginUserWithNavigate = () => {\r\n  const navigate = useNavigate();\r\n  const { setUsername } = useContext(UsernameContext);\r\n  return <LoginUser navigate={navigate} setUsername={setUsername} />;\r\n};\r\n\r\nexport default LoginUserWithNavigate;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
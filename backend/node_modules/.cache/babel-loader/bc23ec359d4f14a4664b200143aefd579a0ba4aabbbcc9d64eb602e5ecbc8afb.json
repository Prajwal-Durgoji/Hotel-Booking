{"ast":null,"code":"var _s2 = $RefreshSig$();\nimport React, { Component } from 'react';\nimport './SearchBox.css';\nimport { useNavigate } from 'react-router-dom';\nconst SearchBox = () => {\n  _s2();\n  var _s = $RefreshSig$();\n  const [location, setLocation] = useState('');\n  const [checkInDate, setCheckInDate] = useState('');\n  const [checkOutDate, setCheckOutDate] = useState('');\n  const [roomOption, setRoomOption] = useState('');\n  const navigate = useNavigate();\n  const handleInputChange = event => {\n    switch (event.target.name) {\n      case 'location':\n        setLocation(event.target.value);\n        break;\n      case 'checkInDate':\n        setCheckInDate(event.target.value);\n        break;\n      case 'checkOutDate':\n        setCheckOutDate(event.target.value);\n        break;\n      case 'roomOption':\n        setRoomOption(event.target.value);\n        break;\n      default:\n        break;\n    }\n  };\n  const handleSubmit = event => {\n    _s();\n    const navigate = useNavigate();\n    event.preventDefault();\n\n    // Convert the check-in and check-out dates to the dd-MM-yyyy format\n    const checkInDate = this.convertDate(this.state.checkInDate);\n    const checkOutDate = this.convertDate(this.state.checkOutDate);\n\n    // Construct the API URL with the search parameters\n    const apiUrl = `http://localhost:8080/api/hotels/search?location=${this.state.location}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}&roomOption=${this.state.roomOption}`;\n\n    // Fetch the properties from the API\n    fetch(apiUrl).then(response => response.json()).then(data => {\n      console.log('Success:', data);\n      // Update the state of the HomePage component with the response\n      navigate('/home', {\n        state: data\n      });\n    }).catch(error => {\n      console.error('Error:', error);\n    });\n  };\n  _s(handleSubmit, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n    return [useNavigate];\n  });\n  convertDate = dateStr => {\n    const date = new Date(dateStr);\n    const day = String(date.getDate()).padStart(2, '0');\n    const month = String(date.getMonth() + 1).padStart(2, '0'); // Months are 0-based\n    const year = date.getFullYear();\n    return `${day}-${month}-${year}`;\n  };\n};\n_s2(SearchBox, \"ZhYBL+UaY1DiW76djpEq8tAxs9w=\", false, function () {\n  return [useNavigate];\n});\n_c = SearchBox;\nexport default SearchBox;\nvar _c;\n$RefreshReg$(_c, \"SearchBox\");","map":{"version":3,"names":["React","Component","useNavigate","SearchBox","_s2","_s","$RefreshSig$","location","setLocation","useState","checkInDate","setCheckInDate","checkOutDate","setCheckOutDate","roomOption","setRoomOption","navigate","handleInputChange","event","target","name","value","handleSubmit","preventDefault","convertDate","state","apiUrl","fetch","then","response","json","data","console","log","catch","error","dateStr","date","Date","day","String","getDate","padStart","month","getMonth","year","getFullYear","_c","$RefreshReg$"],"sources":["C:/Users/User/OneDrive/Desktop/hotelbooking/src/components/SearchBox.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport './SearchBox.css';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SearchBox = () => {\r\n    const [location, setLocation] = useState('');\r\n    const [checkInDate, setCheckInDate] = useState('');\r\n    const [checkOutDate, setCheckOutDate] = useState('');\r\n    const [roomOption, setRoomOption] = useState('');\r\n    const navigate = useNavigate();\r\n\r\n    const handleInputChange = (event) => {\r\n        switch (event.target.name) {\r\n            case 'location':\r\n                setLocation(event.target.value);\r\n                break;\r\n            case 'checkInDate':\r\n                setCheckInDate(event.target.value);\r\n                break;\r\n            case 'checkOutDate':\r\n                setCheckOutDate(event.target.value);\r\n                break;\r\n            case 'roomOption':\r\n                setRoomOption(event.target.value);\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    \r\n\r\n    const handleSubmit = (event) => {\r\n        const navigate = useNavigate();\r\n        event.preventDefault();\r\n\r\n        // Convert the check-in and check-out dates to the dd-MM-yyyy format\r\n        const checkInDate = this.convertDate(this.state.checkInDate);\r\n        const checkOutDate = this.convertDate(this.state.checkOutDate);\r\n\r\n        // Construct the API URL with the search parameters\r\n        const apiUrl = `http://localhost:8080/api/hotels/search?location=${this.state.location}&checkInDate=${checkInDate}&checkOutDate=${checkOutDate}&roomOption=${this.state.roomOption}`;\r\n\r\n        // Fetch the properties from the API\r\n        fetch(apiUrl)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                console.log('Success:', data);\r\n                // Update the state of the HomePage component with the response\r\n                navigate('/home', { state: data });\r\n                \r\n            })\r\n            .catch(error => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    convertDate = (dateStr) => {\r\n        const date = new Date(dateStr);\r\n        const day = String(date.getDate()).padStart(2, '0');\r\n        const month = String(date.getMonth() + 1).padStart(2, '0');  // Months are 0-based\r\n        const year = date.getFullYear();\r\n        return `${day}-${month}-${year}`;\r\n    }\r\n\r\n\r\n    \r\n}\r\n\r\nexport default SearchBox;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}